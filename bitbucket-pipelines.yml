image: node:20

options:
  max-time: 15 # mins

definitions:
  services:
    docker:
      memory: 2048 # mb

  steps:
    - step: &lint
        name: Lint
        script:
          - npm ci --prefer-offline
          - npm run lint

    - step: &build
        name: Build
        script:
          - cp ./src/index.tpl.html ./src/index.html
          - npm ci
          - npm run build
          - cp -rT ./config/gae ./dist/

    - step: &build-and-save
        <<: *build
        artifacts:
          - dist/**

    - step: &deploy
        name: Deploy
        image: google/cloud-sdk:latest
        script:
          # Get version for deployment
          - export VERSION=$(if [ "${BITBUCKET_BRANCH}" = "develop" ]; then echo "staging"; elif [ -n "${GAE_VERSION}" ]; then echo "${GAE_VERSION}"; else date +"%Y-%m-%d-build-${BITBUCKET_BUILD_NUMBER}"; fi)
          - export PROMOTE=$(if [ "${BITBUCKET_BRANCH}" = "master" ]; then echo "--promote"; else echo "--no-promote"; fi)

          # Fill index.html with env variables
          - apt-get update && apt-get install gettext-base
          - export BASE_HREF='/en/'
          - envsubst < './dist/browser/en/index.html' > './dist/browser/en/index.temp.html'
          - mv './dist/browser/en/index.temp.html' './dist/browser/en/index.html'
          - export BASE_HREF='/es/'
          - envsubst < './dist/browser/es/index.html' > './dist/browser/es/index.temp.html'
          - mv './dist/browser/es/index.temp.html' './dist/browser/es/index.html'

          # Deploy dist folder to gae
          - gcloud config set project ${GOOGLE_CLOUD_PROJECT}
          - echo ${GCP_BITBUCKET_PIPELINE_SA} | base64 --decode --ignore-garbage > client-secret.json
          - gcloud auth activate-service-account --key-file client-secret.json && rm -f client-secret.json
          - gcloud app deploy ./dist/ --quiet --version=${VERSION} ${PROMOTE}
        after-script:
          - ./config/gae/clean-versions.sh

pipelines:
  pull-requests:
    '**':
      - parallel:
          steps:
            - step: *build-and-save
            - step: *lint
      - step:
          name: Deploy to staging - PR preview
          deployment: staging
          image: google/cloud-sdk:latest
          script:
            # Get version for deployment
            - export VERSION="preview-${BITBUCKET_PR_ID}"

            # Fill index.html with env variables
            - apt-get update && apt-get install gettext-base
            - export BASE_HREF='/en/'
            - envsubst < './dist/browser/en/index.html' > './dist/browser/en/index.temp.html'
            - mv './dist/browser/en/index.temp.html' './dist/browser/en/index.html'
            - export BASE_HREF='/es/'
            - envsubst < './dist/browser/es/index.html' > './dist/browser/es/index.temp.html'
            - mv './dist/browser/es/index.temp.html' './dist/browser/es/index.html'

              # Deploy dist folder to gae
            - gcloud config set project ${GOOGLE_CLOUD_PROJECT}
            - echo ${GCP_BITBUCKET_PIPELINE_SA} | base64 --decode --ignore-garbage > client-secret.json
            - gcloud auth activate-service-account --key-file client-secret.json && rm -f client-secret.json
            - gcloud app deploy ./dist/ --quiet --no-promote --version=${VERSION}
          after-script:
            - ./config/gae/clean-versions.sh

  branches:
    develop:
      - step: *build-and-save
      - step:
          name: Deploy to staging
          deployment: staging
          <<: *deploy

    master:
      - step: *build-and-save
      - step:
          name: Deploy to production
          deployment: production
          <<: *deploy
      - step:
          name: Sync GitHub Mirror
          image: alpine/git:latest
          clone:
            enabled: false
          script:
            - git clone --bare git@bitbucket.org:usmedia/giz-costing-tool-app.git
            - cd giz-costing-tool-app.git
            - git push --mirror git@github.com:developer-usmedia/giz-costing-tool-app.git


